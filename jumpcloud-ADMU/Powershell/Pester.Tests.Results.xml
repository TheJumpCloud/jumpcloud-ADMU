<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="50" errors="0" failures="0" not-run="0" inconclusive="1" ignored="0" skipped="0" invalid="0" date="2020-05-12" time="14:13:01">
  <environment clr-version="4.0.30319.42000" user-domain="10PRO18091" cwd="C:\agent\_work\1\s" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition5" machine-name="10PRO18091" nunit-version="2.5.8.0" os-version="10.0.18363" user="Administrator" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Inconclusive" success="True" time="39.7898" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\agent\_work\1\s\jumpcloud-ADMU\powershell\Tests\Build.Tests.ps1" executed="True" result="Inconclusive" success="True" time="2.1307" asserts="0" description="C:\agent\_work\1\s\jumpcloud-ADMU\powershell\Tests\Build.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Build Tests" executed="True" result="Inconclusive" success="True" time="1.989" asserts="0" description="Build Tests">
            <results>
              <test-suite type="TestFixture" name="Check Files Exist" executed="True" result="Success" success="True" time="0.7614" asserts="0" description="Check Files Exist">
                <results>
                  <test-case description="gui_jcadmu.exe exists" name="Build Tests.Check Files Exist.gui_jcadmu.exe exists" time="0.1335" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ADMU.ps1 writen to in last 2mins" name="Build Tests.Check Files Exist.ADMU.ps1 writen to in last 2mins" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="gui_jcadmu.exe exists" name="Build Tests.Check Files Exist.gui_jcadmu.exe exists" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="gui_jcadmu.exe exists" name="Build Tests.Check Files Exist.gui_jcadmu.exe exists" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Check Versioning &amp; Signature" executed="True" result="Inconclusive" success="True" time="1.1012" asserts="0" description="Check Versioning &amp; Signature">
                <results>
                  <test-case description="XAML Form version" name="Build Tests.Check Versioning &amp; Signature.XAML Form version" time="0.7887" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="gui_jcadmu.exe version" name="Build Tests.Check Versioning &amp; Signature.gui_jcadmu.exe version" time="0.2138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="gui_jcadmu.exe signature valid" name="Build Tests.Check Versioning &amp; Signature.gui_jcadmu.exe signature valid" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\agent\_work\1\s\jumpcloud-ADMU\powershell\Tests\Functions.Tests.ps1" executed="True" result="Success" success="True" time="33.8764" asserts="0" description="C:\agent\_work\1\s\jumpcloud-ADMU\powershell\Tests\Functions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Functions" executed="True" result="Success" success="True" time="33.8519" asserts="0" description="Functions">
            <results>
              <test-suite type="TestFixture" name="VerifyAccount Function" executed="True" result="Success" success="True" time="0.8761" asserts="0" description="VerifyAccount Function">
                <results>
                  <test-case description="VerifyAccount - Real domain account bob.lazar@JCADB2.local" name="Functions.VerifyAccount Function.VerifyAccount - Real domain account bob.lazar@JCADB2.local" time="0.1046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="VerifyAccount - Wrong account bobby.lazar@JCADB2.local" name="Functions.VerifyAccount Function.VerifyAccount - Wrong account bobby.lazar@JCADB2.local" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="VerifyAccount - Real account with wrong domain bob.lazar@JCADB2.localw" name="Functions.VerifyAccount Function.VerifyAccount - Real account with wrong domain bob.lazar@JCADB2.localw" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="VerifyAccount - Real local account with no domain" name="Functions.VerifyAccount Function.VerifyAccount - Real local account with no domain" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="VerifyAccount - Wrong local account with no domain" name="Functions.VerifyAccount Function.VerifyAccount - Wrong local account with no domain" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Write-Log Function" executed="True" result="Success" success="True" time="1.33" asserts="0" description="Write-Log Function">
                <results>
                  <test-case description="Write-Log - " name="Functions.Write-Log Function.Write-Log - " time="0.0578" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Write-Log - Log is created" name="Functions.Write-Log Function.Write-Log - Log is created" time="0.0974" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Write-Log - ERROR: Log entry exists" name="Functions.Write-Log Function.Write-Log - ERROR: Log entry exists" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Write-Log - WARNING: Log entry exists" name="Functions.Write-Log Function.Write-Log - WARNING: Log entry exists" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Write-Log - INFO: Log entry exists" name="Functions.Write-Log Function.Write-Log - INFO: Log entry exists" time="0.4158" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Remove-ItemIfExists Function" executed="True" result="Success" success="True" time="1.004" asserts="0" description="Remove-ItemIfExists Function">
                <results>
                  <test-case description="Remove-ItemIfExists - Does Exist c:\windows\temp\test\" name="Functions.Remove-ItemIfExists Function.Remove-ItemIfExists - Does Exist c:\windows\temp\test\" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Remove-ItemIfExists - Fails c:\windows\temp\test\" name="Functions.Remove-ItemIfExists Function.Remove-ItemIfExists - Fails c:\windows\temp\test\" time="0.5378" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DownloadLink Function" executed="True" result="Success" success="True" time="0.1471" asserts="0" description="DownloadLink Function">
                <results />
              </test-suite>
              <test-suite type="TestFixture" name="Check_Program_Installed Function" executed="True" result="Success" success="True" time="1.0727" asserts="0" description="Check_Program_Installed Function">
                <results>
                  <test-case description="Check_Program_Installed x64 - Google Chrome" name="Functions.Check_Program_Installed Function.Check_Program_Installed x64 - Google Chrome" time="0.2619" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Check_Program_Installed x32 - TeamViewer 14" name="Functions.Check_Program_Installed Function.Check_Program_Installed x32 - TeamViewer 14" time="0.2292" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Check_Program_Installed - Program Name Does Not Exist" name="Functions.Check_Program_Installed Function.Check_Program_Installed - Program Name Does Not Exist" time="0.2028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Uninstall_Program Function" executed="True" result="Success" success="True" time="11.5432" asserts="0" description="Uninstall_Program Function">
                <results>
                  <test-case description="Install &amp; Uninstall - x32 filezilla" name="Functions.Uninstall_Program Function.Install &amp; Uninstall - x32 filezilla" time="11.4607" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Start-NewProcess Function" executed="True" result="Success" success="True" time="4.3916" asserts="0" description="Start-NewProcess Function">
                <results>
                  <test-case description="Start-NewProcess - Notepad" name="Functions.Start-NewProcess Function.Start-NewProcess - Notepad" time="1.0707" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Start-NewProcess &amp; end after 2s timeout - Notepad " name="Functions.Start-NewProcess Function.Start-NewProcess &amp; end after 2s timeout - Notepad " time="3.026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test-IsNotEmpty Function" executed="True" result="Success" success="True" time="0.0615" asserts="0" description="Test-IsNotEmpty Function">
                <results>
                  <test-case description="Test-IsNotEmpty - $null" name="Functions.Test-IsNotEmpty Function.Test-IsNotEmpty - $null" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test-IsNotEmpty - empty" name="Functions.Test-IsNotEmpty Function.Test-IsNotEmpty - empty" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test-IsNotEmpty - test string" name="Functions.Test-IsNotEmpty Function.Test-IsNotEmpty - test string" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test-Is40chars Function" executed="True" result="Success" success="True" time="0.0626" asserts="0" description="Test-Is40chars Function">
                <results>
                  <test-case description="Test-Is40chars - $null" name="Functions.Test-Is40chars Function.Test-Is40chars - $null" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test-Is40chars - 39 Chars" name="Functions.Test-Is40chars Function.Test-Is40chars - 39 Chars" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test-Is40chars - 40 Chars" name="Functions.Test-Is40chars Function.Test-Is40chars - 40 Chars" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test-HasNoSpaces Function" executed="True" result="Success" success="True" time="0.5795" asserts="0" description="Test-HasNoSpaces Function">
                <results>
                  <test-case description="Test-HasNoSpaces - $null" name="Functions.Test-HasNoSpaces Function.Test-HasNoSpaces - $null" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test-HasNoSpaces - no spaces" name="Functions.Test-HasNoSpaces Function.Test-HasNoSpaces - no spaces" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test-HasNoSpaces - spaces" name="Functions.Test-HasNoSpaces Function.Test-HasNoSpaces - spaces" time="0.0322" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Add-LocalUser Function" executed="True" result="Success" success="True" time="0.6122" asserts="0" description="Add-LocalUser Function">
                <results>
                  <test-case description="Add-LocalUser - testuser to Users " name="Functions.Add-LocalUser Function.Add-LocalUser - testuser to Users " time="0.2675" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test-Localusername Function" executed="True" result="Success" success="True" time="0.4786" asserts="0" description="Test-Localusername Function">
                <results>
                  <test-case description="Test-Localusername - exists" name="Functions.Test-Localusername Function.Test-Localusername - exists" time="0.2015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test-Localusername - does not exist" name="Functions.Test-Localusername Function.Test-Localusername - does not exist" time="0.0759" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test-Domainusername Function" executed="True" result="Success" success="True" time="0.5601" asserts="0" description="Test-Domainusername Function">
                <results>
                  <test-case description="Test-Domainusername - exists" name="Functions.Test-Domainusername Function.Test-Domainusername - exists" time="0.2918" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test-Domainusername - does not exist" name="Functions.Test-Domainusername Function.Test-Domainusername - does not exist" time="0.0482" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DownloadAndInstallAgent Function" executed="True" result="Success" success="True" time="10.6921" asserts="0" description="DownloadAndInstallAgent Function">
                <results>
                  <test-case description="DownloadAndInstallAgent - Verify Download JCAgent prereq Visual C++ 2013 x64" name="Functions.DownloadAndInstallAgent Function.DownloadAndInstallAgent - Verify Download JCAgent prereq Visual C++ 2013 x64" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="DownloadAndInstallAgent - Verify Download JCAgent prereq Visual C++ 2013 x86" name="Functions.DownloadAndInstallAgent Function.DownloadAndInstallAgent - Verify Download JCAgent prereq Visual C++ 2013 x86" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="DownloadAndInstallAgent - Verify Download JCAgent" name="Functions.DownloadAndInstallAgent Function.DownloadAndInstallAgent - Verify Download JCAgent" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="DownloadAndInstallAgent - Verify Install JCAgent prereq Visual C++ 2013 x64" name="Functions.DownloadAndInstallAgent Function.DownloadAndInstallAgent - Verify Install JCAgent prereq Visual C++ 2013 x64" time="0.2071" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="DownloadAndInstallAgent - Verify Install JCAgent prereq Visual C++ 2013 x86" name="Functions.DownloadAndInstallAgent Function.DownloadAndInstallAgent - Verify Install JCAgent prereq Visual C++ 2013 x86" time="0.2077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="DownloadAndInstallAgent - Verify Install JCAgent" name="Functions.DownloadAndInstallAgent Function.DownloadAndInstallAgent - Verify Install JCAgent" time="10.1986" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="GetNetBiosName Function" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="GetNetBiosName Function">
                <results>
                  <test-case description="GetNetBiosName - JCADB2" name="Functions.GetNetBiosName Function.GetNetBiosName - JCADB2" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConvertSID Function" executed="True" result="Success" success="True" time="0.2452" asserts="0" description="ConvertSID Function">
                <results>
                  <test-case description="ConvertSID - Built In Administrator SID" name="Functions.ConvertSID Function.ConvertSID - Built In Administrator SID" time="0.1499" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test-XMLFile Function" executed="True" result="Success" success="True" time="0.0806" asserts="0" description="Test-XMLFile Function">
                <results>
                  <test-case description="Test-XMLFile - Valid XML" name="Functions.Test-XMLFile Function.Test-XMLFile - Valid XML" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Test-XMLFile - InValid XML" name="Functions.Test-XMLFile Function.Test-XMLFile - InValid XML" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\agent\_work\1\s\jumpcloud-ADMU\powershell\Tests\gpo.Tests.ps1" executed="True" result="Success" success="True" time="0.1023" asserts="0" description="C:\agent\_work\1\s\jumpcloud-ADMU\powershell\Tests\gpo.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="GPO Folder Checks" executed="True" result="Success" success="True" time="0.0757" asserts="0" description="GPO Folder Checks">
            <results>
              <test-suite type="TestFixture" name="Check Files &amp; Folders Exist" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Check Files &amp; Folders Exist">
                <results>
                  <test-case description="manifest.xml exists" name="GPO Folder Checks.Check Files &amp; Folders Exist.manifest.xml exists" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\agent\_work\1\s\jumpcloud-ADMU\powershell\Tests\PSScriptAnalyzer.Tests.ps1" executed="True" result="Success" success="True" time="3.6803" asserts="0" description="C:\agent\_work\1\s\jumpcloud-ADMU\powershell\Tests\PSScriptAnalyzer.Tests.ps1">
        <results />
      </test-suite>
    </results>
  </test-suite>
</test-results>