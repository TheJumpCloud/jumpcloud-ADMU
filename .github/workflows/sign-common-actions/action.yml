name: "Sign and Upload"
description: "Signs binaries and uploads the binaries and a signing manifest to S3"
inputs:
  region:
    description: "aws region"
    required: true
  files:
    description: |
      Paths to unsigned binaries separated by newlines

      Example:
      files: |-
        dist/app-linux-amd64
        dist/app-linux-arm64
    required: false
  upload-only-files:
    description: |
      Paths to files that are only uploaded for deployment but not signed

      Example:
      upload-only-files: |-
        dist/linux-app-checksum
        dist/linux-app-manifest.json
    required: false
  SM_API_KEY:
    description: "Software Trust Manager API Key"
    required: true
  SM_CLIENT_CERT_PASSWORD:
    description: "Software Trust Manager Client Certificate Password"
    required: true
  SM_CLIENT_CERT_FILE_B64:
    description: "Base64 encoded Software Trust Manager Client Certificate"
    required: true
  SM_HOST:
    description: "Software Trust Manager Host"
    required: true
runs:
  using: composite
  steps:
    - name: Set Up Env Vars
      shell: bash
      run: |
        if [[ "${CI}" == "true" ]] && [[ "${GITHUB_REF_TYPE}" == "tag" ]] && [[ "${GITHUB_REF_NAME}" =~ ^v?[0-9]+.[0-9]+.[0-9]+$ ]]; then
          echo "IS_RELEASE_BUILD=true" >> "$GITHUB_ENV"
        else
          echo "IS_RELEASE_BUILD=false" >> "$GITHUB_ENV"
        fi
    - name: Setup Code Signing Variables
      if: runner.os == 'Windows'
      shell: bash
      run: |
        echo "${{inputs.SM_CLIENT_CERT_FILE_B64 }}" | base64 --decode > /d/Certificate_pkcs12.p12
        echo "SM_HOST=${{ inputs.SM_HOST }}" >> "$GITHUB_ENV"
        echo "SM_API_KEY=${{ inputs.SM_API_KEY }}" >> "$GITHUB_ENV"
        echo "SM_CLIENT_CERT_FILE=D:\\Certificate_pkcs12.p12" >> "$GITHUB_ENV"
        echo "SM_CLIENT_CERT_PASSWORD=${{ inputs.SM_CLIENT_CERT_PASSWORD }}" >> "$GITHUB_ENV"
        echo "C:\Program Files (x86)\Windows Kits\10\App Certification Kit" >> $GITHUB_PATH
        echo "C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools" >> $GITHUB_PATH
        echo "C:\Program Files\DigiCert\DigiCert One Signing Manager Tools" >> $GITHUB_PATH

    - name: GPG signing with Secure Software Manager
      if: runner.os == 'Linux'
      uses: digicert/ssm-gpg-signing@v0.0.2

    - name: Setup Software Trust Manager code signing
      if: runner.os == 'Windows'
      uses: digicert/ssm-code-signing@v0.0.2

    - name: Sign
      if: runner.os == 'Windows'
      run: PowerShell -Command $env:GITHUB_ACTION_PATH\sign_windows.ps1
      shell: pwsh
      env:
        INPUT_FILES: ${{ inputs.files }}

    - name: Install AWS S3 SDK
      run: npm --prefix "${GITHUB_ACTION_PATH}" install @aws-sdk/client-s3
      shell: bash

    - name: Upload
      uses: actions/github-script@v7
      env:
        OBJECT_LOCK_ENABLED: "true"
        OBJECT_LOCK_YEARS: "3"
        PRERELEASE_ARTIFACT_BUCKET: "jumpcloud-prerelease-artifacts"
        PRERELEASE_ARTIFACT_BUCKET_REGION: ${{ inputs.region }}
      with:
        script: |
          const script = require(`${process.env.GITHUB_ACTION_PATH}/index.js`)
          await script(core, `${{ inputs.files }}`, `${{ inputs.upload-only-files }}`)
